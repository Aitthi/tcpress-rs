[package]
name = "tcpress-rs"
version = "0.1.4"
authors = ["Aitthi Arsa"]
edition = "2018"
description = "A web framework written in Rust for javascript runtime."
categories = ["nodejs", "wasm", "http", "tcp", "bun"]
keywords = ["nodejs", "rust", "http", "tcp", "rest-api", "wasm", "bun"]
repository = "https://github.com/Aitthi/tcpress-rs"
readme = "./README.md"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
wasm-bindgen = "0.2.63"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
wee_alloc = { version = "0.4.5", optional = true }
bytes = "1.3.0"
ahash = { version = "0.8.2", features = ["std"], default-features = false}
httparse = "1.8.0"
url = "2.3.1"
matchit = "0.7.0"
js-sys = "0.3.60"
futures = "0.3.25"
wasm-bindgen-futures = "0.4.33"
serde_json = "1.0.91"
serde-json-wasm = "0.5.0"

[dev-dependencies]
wasm-bindgen-test = "0.3.13"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
